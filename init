#!/bin/sh

echo "Welcome to mass storage mode"

# Mount things needed by this script
mkdir /proc
mkdir /sys
mkdir /etc
mkdir /mnt
mount -t proc proc /proc
mount -t sysfs sysfs /sys

mkdir /config
mount -t configfs -o nodev,noexec,nosuid configfs /config

#Turn on blue led.
echo 255 > /sys/class/leds/blue/brightness

# Create all the symlinks to /bin/busybox
mkdir -p /usr/bin
mkdir -p /sbin
mkdir -p /usr/sbin
echo "Installing Busybox..." && /bin/busybox --install -s

echo /sbin/mdev > /proc/sys/kernel/hotplug
mdev -s

setup_usb_configfs() {
	# See: https://www.kernel.org/doc/Documentation/usb/gadget_configfs.txt
	CONFIGFS=/config/usb_gadget


	# Default values for USB-related deviceinfo variables
	usb_idVendor="0x1209" # Generic
	usb_idProduct="0x4201" # Random ID
	usb_serialnumber="Pro1flasher"
	usb_rndis_function="rndis.usb0"
	usb_mass_storage_function="mass_storage.0"

	echo "Setting up an USB gadget through configfs..."
	# Create an usb gadet configuration
	mkdir $CONFIGFS/g1 
	echo "$usb_idVendor"  > "$CONFIGFS/g1/idVendor"
	echo "$usb_idProduct" > "$CONFIGFS/g1/idProduct"

	# Create english (0x409) strings
	mkdir $CONFIGFS/g1/strings/0x409 || echo "  Couldn't create $CONFIGFS/g1/strings/0x409"

	echo "Fxtec" > "$CONFIGFS/g1/strings/0x409/manufacturer"
	echo "$usb_serialnumber"        > "$CONFIGFS/g1/strings/0x409/serialnumber"
	echo "Pro 1"         > "$CONFIGFS/g1/strings/0x409/product"

	# Create rndis/mass_storage function
	mkdir $CONFIGFS/g1/functions/"$usb_rndis_function" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_rndis_function"
	mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function"
	mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function/lun.0" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function/lun.0"
	mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function/lun.1" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function/lun.1"
	mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function/lun.2" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function/lun.2"
	mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function/lun.3" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function/lun.3"
    mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function/lun.4" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function/lun.4"
    mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function/lun.4" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function/lun.4"

	# Create configuration instance for the gadget
	mkdir $CONFIGFS/g1/configs/c.1 \
		|| echo "  Couldn't create $CONFIGFS/g1/configs/c.1"
	mkdir $CONFIGFS/g1/configs/c.1/strings/0x409 \
		|| echo "  Couldn't create $CONFIGFS/g1/configs/c.1/strings/0x409"
	echo "rndis" > $CONFIGFS/g1/configs/c.1/strings/0x409/configuration \
		|| echo "  Couldn't write configration name"

	# Make sure the node for the eMMC exists

	# Set up mass storage to internal EMMC
	echo /dev/sda > $CONFIGFS/g1/functions/"$usb_mass_storage_function"/lun.0/file
    echo /dev/sdb > $CONFIGFS/g1/functions/"$usb_mass_storage_function"/lun.1/file
    echo /dev/sdc > $CONFIGFS/g1/functions/"$usb_mass_storage_function"/lun.2/file
    echo /dev/sdd > $CONFIGFS/g1/functions/"$usb_mass_storage_function"/lun.3/file
    echo /dev/sde > $CONFIGFS/g1/functions/"$usb_mass_storage_function"/lun.4/file
    echo /dev/sdf > $CONFIGFS/g1/functions/"$usb_mass_storage_function"/lun.5/file

	# Rename the mass storage device
	echo "mmcflasher" > $CONFIGFS/g1/functions/"$usb_mass_storage_function"/lun.0/inquiry_string

	# Link the rndis/mass_storage instance to the configuration
	ln -s $CONFIGFS/g1/functions/"$usb_rndis_function" $CONFIGFS/g1/configs/c.1 \
		|| echo "  Couldn't symlink $usb_rndis_function"
	ln -s $CONFIGFS/g1/functions/"$usb_mass_storage_function" $CONFIGFS/g1/configs/c.1 \
		|| echo "  Couldn't symlink $usb_mass_storage_function"

	# Check if there's an USB Device Controller


	echo "$(ls /sys/class/udc)" > $CONFIGFS/g1/UDC || ( fatal_error "Couldn't write to UDC" )
}

setup_usb_configfs

echo 0 > /sys/class/leds/blue/brightness
echo 255 > /sys/class/leds/green/brightness
while true
do
    echo hi
done

