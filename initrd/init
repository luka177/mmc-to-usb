#!/bin/sh

echo "Welcome to mass storage mode"

. /env.sh

# Mount things needed by this script
mkdir /proc
mkdir /sys
mkdir /etc
mkdir /mnt
mount -t proc proc /proc
mount -t sysfs sysfs /sys

mkdir /config
mount -t configfs -o nodev,noexec,nosuid configfs /config

#Turn on blue led.
if [[ "$DEVICE_HAVE_LED" -eq 2 ]]
then
    echo 255 > $BLUE_LED_PATH
elif [[ "$DEVICE_HAVE_LED" -eq 1 ]]
then
    echo 255 > $LED_PATH
fi

# Create all the symlinks to /bin/busybox
mkdir -p /usr/bin
mkdir -p /sbin
mkdir -p /usr/sbin
echo "Installing Busybox..." && /bin/busybox --install -s

echo /sbin/mdev > /proc/sys/kernel/hotplug
mdev -s

setup_usb_configfs() {
	# See: https://www.kernel.org/doc/Documentation/usb/gadget_configfs.txt
	CONFIGFS=/config/usb_gadget


	# Default values for USB-related deviceinfo variables
	usb_idVendor="0x1209" # Generic
	usb_idProduct="0x4201" # Random ID
	usb_serialnumber="mmc-to-usb"

	echo "Setting up an USB gadget through configfs..."

	# Create an usb gadet configuration
	mkdir $CONFIGFS/g1 
	echo "$usb_idVendor"  > "$CONFIGFS/g1/idVendor"
	echo "$usb_idProduct" > "$CONFIGFS/g1/idProduct"

	# Create english (0x409) strings
	mkdir $CONFIGFS/g1/strings/0x409 || echo "  Couldn't create $CONFIGFS/g1/strings/0x409"

	echo "$DEVICE_MANUFACTURER" > "$CONFIGFS/g1/strings/0x409/manufacturer"
	echo "$usb_serialnumber"        > "$CONFIGFS/g1/strings/0x409/serialnumber"
	echo "$DEVICE_MODEL"         > "$CONFIGFS/g1/strings/0x409/product"

	# Create mass_storage function
    mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function" \
		|| echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function"

    i=1
    while [ $i -le $((NUMOFMMC)) ]
    do 
        echo "Processing device $i" 
        mkdir $CONFIGFS/g1/functions/"$usb_mass_storage_function/lun.$i" \
		    || echo "  Couldn't create $CONFIGFS/g1/functions/$usb_mass_storage_function/lun.$i"
        i=$(( i + 1 ))
    done

    # Create configuration instance for the gadget
	mkdir $CONFIGFS/g1/configs/c.1 \
		|| echo "  Couldn't create $CONFIGFS/g1/configs/c.1"
	mkdir $CONFIGFS/g1/configs/c.1/strings/0x409 \
		|| echo "  Couldn't create $CONFIGFS/g1/configs/c.1/strings/0x409"

	# Set up mass storage to internal EMMC
    i=1
    while [ $i -le $((NUMOFMMC)) ]
    do 
        echo "Processing device $i" 
        tmp=MMC$i
        eval "dev=\$$tmp"
        echo $dev > $CONFIGFS/g1/functions/"$usb_mass_storage_function"/lun.$i/file
        i=$(( i + 1 ))
    done

	# Link the mass_storage instance to the configuration
	ln -s $CONFIGFS/g1/functions/"$usb_mass_storage_function" $CONFIGFS/g1/configs/c.1 \
		|| echo "  Couldn't symlink $usb_mass_storage_function"

	echo "$(ls /sys/class/udc)" > $CONFIGFS/g1/UDC || ( echo "Couldn't write to UDC" )
}

setup_usb_configfs

if [[ "$DEVICE_HAVE_LED" -eq 2 ]]
then
    echo 0 > $BLUE_LED_PATH
    echo 255 > $GREEN_LED_PATH
elif [[ "$DEVICE_HAVE_LED" -eq 1 ]]
then
    echo 0 > $LED_PATH
    sleep 2
    echo 255 > $LED_PATH
fi

while true
do
    echo hi
    sleep 5
done

